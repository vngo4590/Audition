plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.creatis.audition"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        dataBinding true
    }
}

dependencies {
    // App Core
    implementation "androidx.core:core-ktx:$version_core"
    implementation "androidx.appcompat:appcompat:$version_appcompat"

    // App internal
    implementation "com.google.android.material:material:$version_material"
    implementation "androidx.constraintlayout:constraintlayout:$version_constraint_layout"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$version_livedata"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$version_viewmodel"
    implementation "androidx.navigation:navigation-fragment-ktx:$version_navigation_fragment"
    implementation "androidx.navigation:navigation-ui-ktx:$version_navigation_ui"

    // Coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_coroutine"

    // Logging
    implementation "com.jakewharton.timber:timber:$version_timber"

    // Moshi for parsing the JSON format
    implementation "com.squareup.moshi:moshi:$version_moshi"
    implementation "com.squareup.moshi:moshi-kotlin:$version_moshi"
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$version_retrofit_coroutines_adapter"

    // Retrofit for networking
    implementation "com.squareup.retrofit2:retrofit:$version_retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$version_retrofit"

    // WorkManager
    implementation "androidx.work:work-runtime-ktx:$version_work"

    // Room database
    implementation "androidx.room:room-runtime:$version_room"
    kapt "androidx.room:room-compiler:$version_room"

    // Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$version_room"

    // Testing
    testImplementation ("junit:junit:$version_junit")
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    // Glide
    implementation "com.github.bumptech.glide:glide:$version_glide"

    // Reflect
    implementation("org.jetbrains.kotlin:kotlin-reflect:$version_reflect")
}